<html lang="en">
    <%- include('./partials/head.ejs') %>
<body style="overflow:hidden">
    <%- include('./partials/editNav.ejs') %>
    <div class="edit_container">

        <div class="edit_container_left">

            <div class="project_title">
                <input type="text" value="Untitled" name="title" id="title">
                <h2>Marker Tracking</h2>
            </div>

            <div class="asset_section">        
                <div class="file_upload">
                    <div class="drag_area">
                        <i class="fas fa-cloud-upload-alt"></i>
                        <h2>Drag your files here to upload or</h2>
                        <button id="upload_trigger" style="border:none; background-color:transparent; color:#eb64c8; outline: none; font-size:1rem; height:1rem;">Browse</button>
                        <input type="file" value="Browse" name="upload_files" id="upload_files" style="visibility: visible; height:0rem;" multiple>
                        <h2>Accepted format: glb, mp4, png, jpg, jpeg</h2>
                    </div>
                    <div class="convert_text">
                        <h2>Click here to convert your <span style="color:#eb64c8">glTF</span> files to glb</h2>
                        <h2>Why?</h2>
                    </div>
                </div>
                <div class="uploaded_assets">
                    <h2 class="asset_title">Uploaded Assets</h2>
                    <div class="asset_container">
                    </div>
                </div>
            </div>

            <div class="pairing_section">
                <div class="pairing">
                    <div class="pairing_top">
                        <h2>Asset Marker Pairing</h2>
                        <i class="fas fa-plus-square add_pair"></i>
                    </div>
                    
                    <div class="pairing_container">
                        <!-- <div class="pairing_asset">
                            <i class="fas fa-file"></i>
                            <select id="asset_select">
                                <option>burger.glb</option>
                            </select>
                        </div>
                        <i class="fas fa-exchange-alt"></i>
                        <div class="pairing_marker">
                            <i class="fas fa-h-square"></i>
                            <select>
                                <option>Marker H</option>
                            </select>
                        </div>
                        
                        <i class="fas fa-trash-alt delete_pair"></i> -->
                        
                    </div>

                </div>
                <div class="all_pairings">
                    <div class="all_top">
                        <h2>All Pairings</h2>
                        <h3>download markers</h3>
                    </div>
                    <div class="asset_marker_container">
                        <!-- <div class="asset_marker">
                            <div class="asset">
                                <i class="fas fa-file"></i>
                                <h2>burger.glb</h2>
                            </div>
                            <i class="fas fa-exchange-alt"></i>
                            <div class="marker">
                                <i class="fas fa-h-square"></i>
                                <h2>Marker H</h2>
                            </div>
                        </div> -->
                    </div>
                </div>
            </div>


    </div>

        <div class="edit_container_right">
            <div class="preview"></div>
            <div class="controls">
                <div class="control_btns_container">
                    <button><i class="fas fa-expand-alt"></i>Size</button>
                    <button><i class="fas fa-crosshairs"></i>Position</button>
                    <button><i class="fas fa-sync-alt"></i>Rotation</button>
                </div>
                <div class="control_panel">
                    <div class="size_slider_container">
                        <label class="slider_title" for="size_num">Size:</label>
                        <input type="range" name="size_control" id="size_control" class="sliders">
                        <input type="number" name="size_num" id="size_num" class="control_nums">
                    </div>
                    <div class="position_control_container">
                        <div class="x_slider" for="x_num_pos">
                            <label class="slider_title">X:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="x_num_pos" id="x_num_pos" class="control_nums">
                        </div>
                        <div class="y_slider">
                            <label class="slider_title">Y:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="y_num_pos" id="y_num_pos" class="control_nums">
                        </div>
                        <div class="z_slider">
                            <label class="slider_title">Z:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="z_num_pos" id="z_num_pos" class="control_nums">
                        </div>
                    </div><div class="rotation_control_container">
                        <div class="x_slider" for="x_num_pos">
                            <label class="slider_title">X:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="x_num_pos" id="x_num_pos" class="control_nums">
                        </div>
                        <div class="y_slider">
                            <label class="slider_title">Y:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="y_num_pos" id="y_num_pos" class="control_nums">
                        </div>
                        <div class="z_slider">
                            <label class="slider_title">Z:</label>
                            <input type="range" name="size_control" id="size_control" class="sliders">
                            <input type="number" name="z_num_pos" id="z_num_pos" class="control_nums">
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        let uploadDelete
        let assetMarkerPairs
        const pairingContainer = document.querySelector(".pairing_container")
        const inputFile = document.getElementById("upload_files")
        const assetContainer = document.querySelector(".asset_container")
        const addPair = document.querySelector(".add_pair")
        const assetMarkerContaienr = document.querySelector(".asset_marker_container")


        let allFileList = []
        inputFile.onchange = function(e){
            let fileList = e.target.files 
            for(let i = 0; i<fileList.length; i++){
                const file = fileList[i]
                const ext = file.name.split('.')[1]
                let valid
                switch (ext){
                    case 'jpg':
                    case 'jpeg': 
                    case 'png':
                    case 'mp4':
                    case 'glb': 
                        valid = true;
                        break;
                    default:
                        valid = false;
                }
                if(file.name.length>32){
                    alert('file name is too long, please keep it within 32 characters')
                    inputFile.value = ""
                }
                else if(valid){
                    allFileList.push(file)
                    let singleAsset = document.createElement("div")
                    singleAsset.innerHTML = 
                                `<h2 class="asset_name">${file.name}</h2>
                                <i class="fas fa-trash-alt upload_delete"></i>`
                    singleAsset.classList.add("single_asset")
                    assetContainer.appendChild(singleAsset)
                    uploadDelete =  document.querySelectorAll(".upload_delete")
                    //delete button on uploaded assets
                    uploadDelete.forEach(function(item){
                        item.onclick = function(){
                            let fileName = this.previousElementSibling.innerHTML
                            allFileList = allFileList.filter(item=>item.name!=fileName)
                            assetContainer.removeChild(this.parentNode)
                        }
                    })
                }else{
                    alert("File format is not supported, only support glb, jpg, jpeg, png and mp4")
                    inputFile.value = ""
                }
            }
        }


        addPair.onclick = function(){
            if(allFileList.length<1){
                alert("You don't have any asset to pair. Please upload first")
            }else{
            let assetMarker = document.createElement("div")
            assetMarker.innerHTML = `<div class="asset">
                                <i class="fas fa-file"></i>
                                <h2>${allFileList[0].name}</h2>
                            </div>
                            <i class="fas fa-exchange-alt"></i>
                            <div class="marker">
                                <i class="fas fa-h-square"></i>
                                <h2>Marker A</h2>
                            </div>`
            assetMarker.classList.add("asset_marker")
            assetMarkerContaienr.appendChild(assetMarker)
            assetMarkerPairs = document.querySelectorAll('.asset_marker')
            assetMarkerPairs.forEach(pair=>{

                

                pair.onclick = function(){

                    assetMarkerPairs.forEach(pair=>{
                        pair.classList.remove("pair_active")
                    })

                    pair.classList.add("pair_active")

                    let assetOptions = ""
                    let clickedOption = this
                    let selectedAsset = this.querySelector(".asset h2").innerHTML
                    let selectedMarker = this.querySelector(".marker h2").innerHTML
                    
                    let temp = ""
                    allFileList.forEach(file=>{
                        let option
                        if(file.name == selectedAsset){
                            option = `<option data-value=${file.name.toString()} selected>${file.name}</option>`
                        }else{
                            option = `<option data-value=${file.name.toString()}>${file.name}</option>`
                        }
                        temp = assetOptions
                        assetOptions = temp+option
                    })
                    let markerOptions = ""
                    let tempMarker = ""
                    for(let i = 0; i < 10; i++){
                        let letter
                        switch(i){
                            case 0:
                                letter = "A"
                                break
                            case 1:
                                letter = "B"
                                break
                            case 2:
                                letter = "C"
                                break
                            case 3:
                                letter = "D"
                                break
                            case 4:
                                letter = "E"
                                break
                            case 5:
                                letter = "F"
                                break
                            case 6:
                                letter = "G"
                                break
                            case 7:
                                letter = "H"
                                break
                            case 8:
                                letter = "I"
                                break
                            case 9:
                                letter = "J"
                                break
                        }
                        let option 
                        if(selectedMarker == "Marker "+letter){
                            option = `<option data-value="Marker ${letter}" selected>Marker ${letter}</option>`
                        }else{
                            option = `<option data-value="Marker ${letter}">Marker ${letter}</option>`
                        }
                        tempMarker = markerOptions
                        markerOptions = tempMarker + option
                    }
                
                    pairingContainer.innerHTML = `<div class="pairing_asset">
                            <i class="fas fa-file"></i>
                            <select id="asset_select">
                                ${assetOptions}
                            </select>
                        </div>
                        <i class="fas fa-exchange-alt"></i>
                        <div class="pairing_marker">
                            <i class="fas fa-h-square"></i>
                            <select id="marker_select">
                                ${markerOptions}
                            </select>
                        </div>
                        
                        <i class="fas fa-trash-alt delete_pair"></i>`
                    let assetSelect = document.getElementById('asset_select')
                    let markerSelect = document.getElementById("marker_select")
                    let deletePair = document.querySelector(".delete_pair")
                    assetSelect.onchange = function(e){
                        let assetName = clickedOption.querySelector(".asset h2")
                        assetName.innerHTML = assetSelect.value
                        console.log(assetSelect.value)
                    }
                    markerSelect.onchange = function(e){
                        let markerName = clickedOption.querySelector(".marker h2")
                        markerName.innerHTML = markerSelect.value
                        console.log(markerSelect.value)
                    }
                    deletePair.onclick = function(){
                        assetMarkerContaienr.removeChild(clickedOption)
                        pairingContainer.innerHTML = ""
                    }

                }
            })
            }
        }

        
        //monitoring changes on all uploaded assets
        const config = { attributes: true, childList: true, subtree: true };

        // Callback function to execute when mutations are observed
        const callback = function(mutationsList, observer) {
            // Use traditional 'for loops' for IE 11
            for(const mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    if(mutation.removedNodes.length>0){
                        if(assetMarkerPairs){
                            assetMarkerPairs.forEach(pair=>{
                                let deletedAsset = mutation.removedNodes[0].childNodes[0].innerHTML
                                let assetName = pair.querySelector('.asset h2').innerHTML
                                if(assetName==deletedAsset){
                                    assetMarkerContaienr.removeChild(pair)
                                    pairingContainer.innerHTML = ""
                                }
                            })
                        }
                    }
                    
                }
            }
        };

        // Create an observer instance linked to the callback function
        const observer = new MutationObserver(callback);

        // Start observing the target node for configured mutations
        observer.observe(assetContainer, config);

        


        
    </script>

</body>
</html>